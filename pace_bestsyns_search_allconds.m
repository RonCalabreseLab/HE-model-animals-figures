function [updated_bundle a_ranked_db] = ...
    pace_bestsyns_search_allconds(input_num, model_id, batch_num, gen_limit, ...
                                  pop_size, max_evals)
  
  % Sets the synaptic weights to the best weights and then runs a
  % godlike search varying all channel conductance parameters.

% load common code
common

% load targets
load '../run-synscale/targets_synscale_20rand_6inputs_pairs_MPP.mat'
load 'targets_6inputs_pairs_MPP_relsyns.mat'

% load leak db 
% * db_setC_leak_8syn.mat: 3 sets of R/E leak params
% * db_setC_1leak_8syn.mat: 1 common set of R/E leak params
% NOTE: don't forget to change the reference below!
load 'db_setC_1leak_8syn.mat'

% utility functions
get_bundle = @(input_num, batch_num) ...
    getfield(load(['input' input_names{input_num} ...
                   '/bundle_asa_ga_2syns_setCId47-batch' num2str(batch_num) ...
                   '.mat']), ...
             'a_results_bundle');

% load best synapses from earlier runs
bundle_batch = 1;
if input_num == 1
  bundle_batch = 3;                        % input #1 is special
end
a_bundle = get_bundle(input_num, bundle_batch);

a_crit_db = ...
    overwrite_crit_stds(matchingRow(...
      delColumns(target_HE8_12_syns_rel_db, '/synS/'), ...
      find(target_HE8_12_syns_rel_db(:, 'inputdir') == input_num)));
a_crit_nophase_db = ...
    delColumns(a_crit_db, {'/phase_median/'});

a_ranked_db = ...
    sort_MAE(rankMatching(noNaNRows(a_bundle.joined_db), ...
                          a_crit_nophase_db));
joined_ranked_db = ...
    joinOriginal(a_ranked_db, ':', ...
                 struct('origCols', '/ItemIndex/', ...
                        'rankedCols', 'Max'));

% choose model and overwrite synapses
model_leak_params_db = ...
    addParams(setC_id_1leak_8syn_db(model_id, :), ...
              {'inputdir', 'batch', 'trial'}, ...
              [input_num batch_num 0]);

% put in synapses
model_leak_params_db(1, '/synS/') = ...
    joined_ranked_db(1, '/synS/');

% make an empty fileset for loading new simulations
a_8syns_fs = ...
    params_tests_fileset('', ...
                         5e-4, 1, 'simhe bestsyn allcond', ...
                         struct('skipNum', 2, ...
                                'loadItemProfileFunc', ...
                                @loadHE8_12));

a_ga_allcond_leak_model_bundle = ...
    dataset_db_bundle(a_8syns_fs, tests_db, tests_db, ...
                      struct('joinDBfunc', @makeHErowDb1model));

% 19 or 15 columns based on leak parameters
num_cols = 15;

max_evals = defaultValue('max_evals', 5000);
search_props = ...
    struct('joinDBfunc', @makeHErowDb1model, ...
           'inputRanges', [ repmat([1 50], num_cols, 1) ]', ...
           'fitmoProps', ...
           struct('fuzzy', 1, 'quiet', 1, 'gFile', 'simhe_ind_synscale_1model.g'), ...
           'GAopts', ...
           struct('godlikeAlgos', {{'GA';'ASA'}}, ...
                  'options', ...
                  struct('MinIters', gen_limit, 'MaxIters', 20, ... % 
                         'PopulationSize', pop_size, ...
                         'MaxFunEvals', max_evals)));
% limit to one method for optimal use of cores

search_props.fitParams = ...
    {'/(axon|neurite|soma|synE|leak).*/'}; % num_cols conductances 

% run search
[updated_bundle a_ranked_db] = ...
      searchSetCModel(a_ga_allcond_leak_model_bundle, ...
                      model_leak_params_db, ...
                      a_crit_nophase_db, sort_MAE, ...
                      'simhe-1model-allsyns', ...
                      search_props);


